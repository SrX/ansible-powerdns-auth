%YAML 1.2
---
- hosts: localhost
  connection: local
  gather_facts: false

  vars:
    ansible_python_interpreter: python
    pdns_version: "{{ lookup('ansible.builtin.env', 'pdns_version') }}"
    common_args: &common
      api_key: foo

  tasks:
    - ansible.builtin.debug:
        var: ansible_python_interpreter

    - name: check for non-existent zone
      kpfleming.powerdns_auth.zone:
        <<: *common
        name: d1.example.
        state: exists
      register: result

    - name: display result
      ansible.builtin.debug:
        var: result

    - name: check result
      ansible.builtin.debug:
        msg: success
      failed_when:
        - '"exception" in result'
        - result.zone.exists != false

    - name: check notify for non-existent zone
      kpfleming.powerdns_auth.zone:
        <<: *common
        name: d1.example.
        state: notify
      ignore_errors: true
      register: result

    - name: display result
      ansible.builtin.debug:
        var: result

    - name: check result
      ansible.builtin.debug:
        msg: success
      failed_when:
        - '"exception" in result'
        - result.failed != true

    - name: check for failure during zone creation without properties
      kpfleming.powerdns_auth.zone:
        <<: *common
        name: d2.example.
        state: present
      ignore_errors: true
      register: result

    - name: display result
      ansible.builtin.debug:
        var: result

    - name: check result
      ansible.builtin.debug:
        msg: success
      failed_when:
        - '"exception" in result'
        - result.failed != true

    - name: check for failure during zone creation without soa
      kpfleming.powerdns_auth.zone:
        <<: *common
        name: d2.example.
        state: present
        properties:
          kind: Native
      ignore_errors: true
      register: result

    - name: display result
      ansible.builtin.debug:
        var: result

    - name: check result
      ansible.builtin.debug:
        msg: success
      failed_when:
        - '"exception" in result'
        - result.failed != true

    - name: check "Native" zone creation
      kpfleming.powerdns_auth.zone:
        <<: *common
        name: d2.example.
        state: present
        properties:
          kind: Native
          account: test-account1
          nameservers:
            - ns.example.
          soa:
            mname: localhost.
            rname: hostmaster.localhost.
        metadata:
          allow_axfr_from:
            - AUTO-NS
          ixfr: true
          axfr_source: 127.0.0.1
      register: result

    - name: display result
      ansible.builtin.debug:
        var: result

    - name: check result
      ansible.builtin.debug:
        msg: success
      failed_when:
        - '"exception" in result'
        - result.changed != true
        - result.zone.name != "d2.example."
        - result.zone.kind != "Native"
        - result.zone.account != "test-account1"
        - result.zone.metadata.allow_axfr_from[0] != "AUTO-NS"
        - result.zone.metadata.ixfr != true
        - result.zone.metadata.axfr_source != "127.0.0.1"

    - name: check that zone properties and metadata did not change
      kpfleming.powerdns_auth.zone:
        <<: *common
        name: d2.example.
        state: present
        properties:
          kind: Native
          nameservers:
            - ns.example.
        metadata:
          allow_axfr_from:
            - AUTO-NS
          ixfr: true
          axfr_source: 127.0.0.1
      register: result

    - name: display result
      ansible.builtin.debug:
        var: result

    - name: check result
      ansible.builtin.debug:
        msg: success
      failed_when:
        - '"exception" in result'
        - result.changed != false
        - result.zone.name != "d2.example."
        - result.zone.kind != "Native"
        - result.zone.account != "test-account1"
        - result.zone.metadata.allow_axfr_from[0] != "AUTO-NS"
        - result.zone.metadata.ixfr != true
        - result.zone.metadata.axfr_source != "127.0.0.1"

    - name: check zone kind change from "Native" to "Master"
      kpfleming.powerdns_auth.zone:
        <<: *common
        name: d2.example.
        state: present
        properties:
          kind: Master
      register: result

    - name: display result
      ansible.builtin.debug:
        var: result

    - name: check result
      ansible.builtin.debug:
        msg: success
      failed_when:
        - '"exception" in result'
        - result.changed != true
        - result.zone.kind != "Master"

    - name: check zone metadata change
      kpfleming.powerdns_auth.zone:
        <<: *common
        name: d2.example.
        state: present
        metadata:
          allow_axfr_from:
            - AUTO-NS
            - "::"
          ixfr: false
          axfr_source: 127.0.0.8
          slave_renotify: true
          tsig_allow_axfr:
            - axfr-key
      register: result

    - name: display result
      ansible.builtin.debug:
        var: result

    - name: check result
      ansible.builtin.debug:
        msg: success
      failed_when:
        - '"exception" in result'
        - result.changed != true
        - result.zone.metadata.allow_axfr_from[0] != "AUTO-NS"
        - result.zone.metadata.allow_axfr_from[1] != "::"
        - result.zone.metadata.ixfr != false
        - result.zone.metadata.axfr_source != "127.0.0.8"
        - result.zone.metadata.slave_renotify != true
        - result.zone.tsig_allow_axfr[0] != "axfr-key"

    - name: check notify for zone
      kpfleming.powerdns_auth.zone:
        <<: *common
        name: d2.example.
        state: notify
      register: result

    - name: display result
      ansible.builtin.debug:
        var: result

    - name: check result
      ansible.builtin.debug:
        msg: success
      failed_when:
        - '"exception" in result'
        - result.changed != true

    - name: check zone removal
      kpfleming.powerdns_auth.zone:
        <<: *common
        name: d2.example.
        state: absent
      register: result

    - name: display result
      ansible.builtin.debug:
        var: result

    - name: check result
      ansible.builtin.debug:
        msg: success
      failed_when:
        - '"exception" in result'
        - result.changed != true

    - name: check "Slave" zone creation
      kpfleming.powerdns_auth.zone:
        <<: *common
        name: d3.example.
        state: present
        properties:
          kind: Slave
          masters:
            - 1.1.1.1
            - ::1
        metadata:
          axfr_master_tsig:
            - axfr-key
      register: result

    - name: display result
      ansible.builtin.debug:
        var: result

    - name: check result
      ansible.builtin.debug:
        msg: success
      failed_when:
        - '"exception" in result'
        - result.changed != true
        - result.zone.name != "d3.example."
        - result.zone.kind != "Slave"
        - result.zone.masters[0] != "1.1.1.1"
        - result.zone.masters[1] != "::1"
        - result.zone.axfr_master_tsig[0] != "axfr-key"

    - name: check slave zone retrieval
      kpfleming.powerdns_auth.zone:
        <<: *common
        name: d3.example.
        state: retrieve

    - name: check "Slave" master change
      kpfleming.powerdns_auth.zone:
        <<: *common
        name: d3.example.
        state: present
        properties:
          kind: Slave
          masters:
            - 2.2.2.2
            - ::1
      register: result

    - name: display result
      ansible.builtin.debug:
        var: result

    - name: check result
      ansible.builtin.debug:
        msg: success
      failed_when:
        - '"exception" in result'
        - result.changed != true
        - result.zone.masters[0] != "2.2.2.2"
        - result.zone.masters[1] != "::1"

    - name: check zone removal
      kpfleming.powerdns_auth.zone:
        <<: *common
        name: d3.example.
        state: absent
      register: result

    - name: display result
      ansible.builtin.debug:
        var: result

    - name: check result
      ansible.builtin.debug:
        msg: success
      failed_when:
        - '"exception" in result'
        - result.changed != true

    - when: (pdns_version == 'master') or (pdns_version is version('4.7', '>='))
      block:
        - name: check "Producer" zone creation
          register: result
          kpfleming.powerdns_auth.zone:
            <<: *common
            name: catalog1.example.
            state: present
            properties:
              kind: Producer
              nameservers:
                - invalid.
              soa:
                mname: invalid.
                rname: hostmaster.invalid.

        - name: display result
          ansible.builtin.debug:
            var: result

        - name: check result
          ansible.builtin.debug:
            msg: success
          failed_when:
            - '"exception" in result'
            - result.changed != true
            - result.zone.name != "catalog1.example."
            - result.zone.kind != "Producer"

        - name: check notify for zone
          register: result
          kpfleming.powerdns_auth.zone:
            <<: *common
            name: catalog1.example.
            state: notify

        - name: display result
          ansible.builtin.debug:
            var: result

        - name: check result
          ansible.builtin.debug:
            msg: success
          failed_when:
            - '"exception" in result'
            - result.changed != true

        - name: check "Consumer" zone creation
          register: result
          kpfleming.powerdns_auth.zone:
            <<: *common
            name: catalog2.example.
            state: present
            properties:
              kind: Consumer
              masters:
                - 1.1.1.1
                - ::1
            metadata:
              axfr_master_tsig:
                - axfr-key

        - name: display result
          ansible.builtin.debug:
            var: result

        - name: check result
          ansible.builtin.debug:
            msg: success
          failed_when:
            - '"exception" in result'
            - result.changed != true
            - result.zone.name != "catalog2.example."
            - result.zone.kind != "Consumer"
            - result.zone.masters[0] != "1.1.1.1"
            - result.zone.masters[1] != "::1"
            - result.zone.axfr_master_tsig[0] != "axfr-key"

        - name: check "Consumer" zone retrieval
          kpfleming.powerdns_auth.zone:
            <<: *common
            name: catalog2.example.
            state: retrieve

        - name: create zone for catalog
          kpfleming.powerdns_auth.zone:
            <<: *common
            name: d4.example.
            state: present
            properties:
              kind: Master
              nameservers:
                - ns.example.
              soa:
                mname: localhost.
                rname: hostmaster.localhost.

        - name: check zone catalog property change
          register: result
          kpfleming.powerdns_auth.zone:
            <<: *common
            name: d4.example.
            state: present
            properties:
              kind: Master
              catalog: catalog1.example.

        - name: display result
          ansible.builtin.debug:
            var: result

        - name: check result
          ansible.builtin.debug:
            msg: success
          failed_when:
            - '"exception" in result'
            - result.changed != true
            - result.zone.catalog != "catalog1.example."
