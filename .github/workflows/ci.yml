name: CI

on:
  push:
    branches:
    - main
    paths:
    - '*.py'
    - 'api-swagger.json'
    - 'tox.ini'
    - 'workflow-support/test-*.yml'
    - 'workflow-support/make_ci_image.sh'
    - 'workflow-support/start_server.sh'
    - 'workflow-support/pdns-versions.json'
    - '.github/workflows/ci.yml'
    - '.github/actions/*/action.yml'
  pull_request:
    types:
    - opened
    - reopened
    - synchronize
    branches:
    - main
    paths:
    - '*.py'
    - 'api-swagger.json'
    - 'tox.ini'
    - 'workflow-support/test-*.yml'
    - 'workflow-support/make_ci_image.sh'
    - 'workflow-support/start_server.sh'
    - 'workflow-support/pdns-versions.json'
    - '.github/workflows/ci.yml'
    - '.github/actions/*/action.yml'
  schedule:
    - cron: "35 4 * * 6"

jobs:
  image_details:
    runs-on: ubuntu-20.04
    outputs:
      image_registry: ${{ steps.details.outputs.image_registry }}
      image_base: ${{ steps.details.outputs.image_registry }}/${{ steps.details.outputs.registry_account }}/${{ steps.details.outputs.repo_name }}
      base_image: ${{ steps.details.outputs.image_registry }}/${{ steps.details.outputs.registry_account }}/python
    steps:
    - id: details
      uses: kpfleming/composite-actions/image-details@main
  preflight:
    runs-on: ubuntu-20.04
    needs:
    - image_details
    outputs:
      need_image: ${{ steps.preflight.outputs.need_image }}
      image_tag: ${{ steps.preflight.outputs.image_tag }}
      versions: ${{ steps.get_versions.outputs.versions }}
    steps:
    - id: preflight
      uses: kpfleming/composite-actions/ci-preflight@main
    - id: get_versions
      run: cat workflow-support/pdns-versions.json >> $GITHUB_OUTPUT
  ci-image:
    runs-on: ubuntu-20.04
    needs:
    - image_details
    - preflight
    strategy:
      matrix:
        pdns: ${{ fromJSON(needs.preflight.outputs.versions).pdns }}
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/make-ci-image
      if: needs.preflight.outputs.need_image == 'true'
      with:
        pdns_version: ${{ matrix.pdns }}
        base_image: ${{ needs.image_details.outputs.base_image }}
        image_name: ${{ needs.image_details.outputs.image_base }}:pdns-${{ matrix.pdns }}-${{ needs.preflight.outputs.image_tag }}
        image_registry: ${{ needs.image_details.outputs.image_registry }}
        registry_username: ${{ secrets.QUAY_BOT_NAME }}
        registry_password: ${{ secrets.QUAY_BOT_PASSWORD }}
  test:
    runs-on: ubuntu-20.04
    needs:
    - image_details
    - preflight
    - ci-image
    strategy:
      matrix:
        pdns: ${{ fromJSON(needs.preflight.outputs.versions).pdns }}
        python: [py38, py39, py310, py311]
      fail-fast: false
    container:
      image: ${{ needs.image_details.outputs.image_base }}:pdns-${{ matrix.pdns }}-${{ needs.preflight.outputs.image_tag }}
    steps:
    - uses: actions/checkout@v3
    - name: start pdns_server
      run: workflow-support/start_server.sh
    - name: run tests
      run: tox -e${{ matrix.python }}-ansible --workdir /root/tox
      env:
        pdns_version: ${{ matrix.pdns }}
