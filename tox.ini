[tox]
envlist=lint
skipsdist=True
[ansible-base]
deps=
    bravado
    ansible
    swagger-spec-validator==2.6.0
    jsonschema<4
setenv=
    ANSIBLE_COLLECTIONS_PATH={envtmpdir}/collections
commands=
    python -VV
    ansible-playbook -i localhost, workflow-support/make-galaxy-yml.yml
    ansible-galaxy collection install -p {env:ANSIBLE_COLLECTIONS_PATH} src
    ansible-playbook -i localhost, workflow-support/test-tsigkey-pdns-{env:pdns_version}.yml
    ansible-playbook -i localhost, workflow-support/test-zone-pdns-{env:pdns_version}.yml
[testenv:lint-action]
ignore_errors=true
allowlist_externals=bash
passenv=GITHUB_* LINTLY_API_KEY
deps=
    black
    flake8
    lintly23
    markupsafe==2.0.1
commands=
    bash -c 'flake8 --ignore=E501,E402,E231 | lintly --format=flake8 --no-request-changes'
    bash -c 'black --check . 2>&1 >/dev/null | lintly --format=black --no-request-changes'
    bash -c 'shellcheck workflow-support/*.sh'
[testenv:lint]
allowlist_externals=bash
deps=
    black
    flake8
commands=
    flake8 --ignore=E501,E402,E231
    black --check .
    bash -c 'shellcheck workflow-support/*.sh'
[testenv:py{38,39,310,311}-ansible]
passenv=pdns_version
deps=
    {[ansible-base]deps}
setenv=
    {[ansible-base]setenv}
commands=
    {[ansible-base]commands}
[testenv:publish-action]
passenv=ANSIBLE_GALAXY_TOKEN TAG
deps=
    {[ansible-base]deps}
commands=
    ansible-playbook -i localhost, workflow-support/publish.yml
