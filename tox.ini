[tox]
envlist=lint
skipsdist=True
[ansible-base]
deps=
    bravado
    ansible
    swagger-spec-validator==2.6.0
    jsonschema<4
commands=
    python -VV
    ansible-playbook -i localhost, workflow-support/test-tsigkey.yml
    ansible-playbook -i localhost, workflow-support/test-zone.yml
[galaxy-base]
deps=
    ansible
setenv=
    ANSIBLE_COLLECTIONS_PATH={envtmpdir}/collections
commands=
    ansible-playbook -i localhost, workflow-support/make-galaxy-yml.yml
    ansible-galaxy collection install -p {env:ANSIBLE_COLLECTIONS_PATH} src
[lint-base]
deps=
    black
    flake8
    ansible-lint
[testenv:lint-action]
ignore_errors=true
allowlist_externals=bash
deps=
    {[galaxy-base]deps}
    {[lint-base]deps}
setenv=
    {[galaxy-base]setenv}
commands=
    {[galaxy-base]commands}
    flake8 --ignore=E501,E402,E231 src
    black --check --diff src
    bash -c 'shellcheck workflow-support/*.sh'
    bash -c 'ansible-lint --write=all -v'
[testenv:lint]
allowlist_externals=bash
deps=
    {[galaxy-base]deps}
    {[lint-base]deps}
setenv=
    {[galaxy-base]setenv}
commands=
    {[galaxy-base]commands}
    flake8 --ignore=E501,E402,E231 src
    black src
    bash -c 'shellcheck workflow-support/*.sh'
    bash -c 'ansible-lint --write=all -v'
[testenv:py{38,39,310,311}-ansible]
passenv=pdns_version
deps=
    {[galaxy-base]deps}
    {[ansible-base]deps}
setenv=
    {[galaxy-base]setenv}
commands=
    {[galaxy-base]commands}
    {[ansible-base]commands}
[testenv:build]
deps=
    {[galaxy-base]deps}
setenv=
    TAG=local
commands=
    ansible-playbook -i localhost, workflow-support/build.yml
[testenv:publish-action]
passenv=ANSIBLE_GALAXY_TOKEN,TAG
deps=
    {[galaxy-base]deps}
commands=
    ansible-playbook -i localhost, workflow-support/build.yml
    ansible-playbook -i localhost, workflow-support/publish.yml
